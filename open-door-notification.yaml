blueprint:
  name: Door left open → Notify (3 devices, repeat + iOS levels)
  description: >
    When any selected door is left open for the chosen duration, send a
    mobile_app notification to up to 3 selected devices. For more than 3,
    create another automation from this blueprint or make a YAML notify group
    (Home Assistant Notifications → group platform). Home Assistant 2024.8+.
  domain: automation

  input:
    doors:
      name: Door sensors
      selector:
        entity:
          domain: binary_sensor
          device_class: [door, opening]
          multiple: true

    open_for:
      name: How long must it stay open?
      selector:
        duration: {}

    # --- Up to 3 mobile_app devices to notify ---
    notify_device_1:
      name: Notify device 1
      selector:
        device:
          integration: mobile_app
      default: null

    notify_device_2:
      name: Notify device 2 (optional)
      selector:
        device:
          integration: mobile_app
      default: null

    notify_device_3:
      name: Notify device 3 (optional)
      selector:
        device:
          integration: mobile_app
      default: null

    title:
      name: Notification title
      default: "Door left open"
      selector:
        text: {}

    message:
      name: Notification message (templatable)
      description: >
        Placeholders:
        - {{ which }} → door that triggered
        - {{ open_list|join(', ') }} → all currently-open selected doors
        - {{ open_count }} → how many are open
        - {{ open_minutes }} → how long (in minutes) at least one selected door has been open
      default: >-
        {{ which }} has been open for
        {{ open_minutes }} minute{% if open_minutes != 1 %}s{% endif %}.
        Still open: {{ open_list|join(', ') }}.
      selector:
        text:
          multiline: true

    # ---- Repeat options ----
    repeat_enabled:
      name: Keep reminding until closed?
      default: true
      selector:
        boolean: {}

    repeat_every:
      name: Repeat interval
      default: { minutes: 2 }
      selector:
        duration: {}

    max_repeats:
      name: Max repeats (0 = unlimited)
      default: 0
      selector:
        number:
          min: 0
          max: 100
          mode: box
          unit_of_measurement: times

    # ---- iOS interruption level & critical options ----
    ios_interruption_level:
      name: iPhone notification level
      description: passive, active (default), time-sensitive, or critical.
      default: active
      selector:
        select:
          options: [passive, active, time-sensitive, critical]

    ios_critical_volume:
      name: Critical sound volume (if level = critical)
      description: 0.1–1.0 (1.0 is loudest).
      default: 1.0
      selector:
        number:
          min: 0.1
          max: 1.0
          step: 0.1
          mode: slider

    ios_sound_name:
      name: iOS sound name (optional)
      description: Bundled/custom sound (e.g., "default"). Blank = system default.
      default: ""
      selector:
        text: {}

mode: restart

# ---------- Variables ----------
variables:
  selected_doors: !input doors
  open_for: !input open_for
  repeat_enabled: !input repeat_enabled

  # Selected devices (may be null)
  d1: !input notify_device_1
  d2: !input notify_device_2
  d3: !input notify_device_3

  # List of selected doors currently open (by friendly name)
  open_list: >-
    {{ expand(selected_doors)
       | selectattr('state','eq','on')
       | map(attribute='name')
       | list }}
  open_count: "{{ open_list | length }}"

  # Which door triggered (friendly name)
  which: >-
    {% if trigger is defined and trigger.to_state is not none -%}
      {{ trigger.to_state.name }}
    {%- else -%}{%- endif %}

  # Minutes that at least one selected door has been open (max over open doors)
  open_minutes: >-
    {% set minutes = 0 %}
    {% for e in expand(selected_doors) | selectattr('state','eq','on') %}
      {% set age = (as_timestamp(now()) - as_timestamp(e.last_changed)) / 60 %}
      {% if age > minutes %}
        {% set minutes = age %}
      {% endif %}
    {% endfor %}
    {{ minutes | round(0) | int }}

  _title: !input title
  _message: !input message

  # iOS options
  _ios_level: !input ios_interruption_level
  _ios_volume: !input ios_critical_volume
  _ios_sound: !input ios_sound_name

# ---------- Trigger ----------
trigger:
  - platform: state
    entity_id: !input doors
    to: "on"
    for: !input open_for

# ---------- Condition ----------
condition:
  - condition: template
    value_template: "{{ trigger.to_state.state == 'on' }}"

# ---------- Actions ----------
action:
  # Recompute open list and minutes at send time
  - variables:
      open_list: >-
        {{ expand(selected_doors)
           | selectattr('state','eq','on')
           | map(attribute='name')
           | list }}
      open_count: "{{ open_list | length }}"
      open_minutes: >-
        {% set minutes = 0 %}
        {% for e in expand(selected_doors) | selectattr('state','eq','on') %}
          {% set age = (as_timestamp(now()) - as_timestamp(e.last_changed)) / 60 %}
          {% if age > minutes %}
            {% set minutes = age %}
          {% endif %}
        {% endfor %}
        {{ minutes | round(0) | int }}

  # iOS payload (ignored on Android; handled by Companion app)
  - variables:
      ios_push_block: >-
        {% set sound_name = _ios_sound|trim if _ios_sound|trim else 'default' %}
        {% if _ios_level == 'critical' %}
        {{ {
            "push": {
              "interruption-level": "critical",
              "sound": {
                "name": sound_name,
                "critical": 1,
                "volume": (_ios_volume|float)
              }
            }
          } }}
        {% else %}
        {{ { "push": { "interruption-level": _ios_level } } }}
        {% endif %}

  # --- Initial send to each selected device ---
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ d1 is not none }}"
        sequence:
          - device_id: !input notify_device_1
            domain: mobile_app
            type: notify
            title: "{{ _title }}"
            message: "{{ _message }}"
            data: "{{ ios_push_block }}"
      - conditions:
          - condition: template
            value_template: "{{ d2 is not none }}"
        sequence:
          - device_id: !input notify_device_2
            domain: mobile_app
            type: notify
            title: "{{ _title }}"
            message: "{{ _message }}"
            data: "{{ ios_push_block }}"
      - conditions:
          - condition: template
            value_template: "{{ d3 is not none }}"
        sequence:
          - device_id: !input notify_device_3
            domain: mobile_app
            type: notify
            title: "{{ _title }}"
            message: "{{ _message }}"
            data: "{{ ios_push_block }}"

  # --- Optional repeat loop (updates open_minutes each time) ---
  - if:
      - condition: template
        value_template: "{{ repeat_enabled | bool }}"
    then:
      - variables:
          _max: !input max_repeats
      - repeat:
          while:
            - condition: template
              value_template: >
                {% set any_open = expand(selected_doors)
                   | selectattr('state','eq','on')
                   | list
                   | length > 0 %}
                {% set idx = repeat.index | default(0) %}
                {% set under_limit = (_max | int == 0) or (idx < _max | int) %}
                {{ any_open and under_limit }}
          sequence:
            - delay: !input repeat_every

            # Recompute open list and minutes for each reminder
            - variables:
                open_list: >-
                  {{ expand(selected_doors)
                     | selectattr('state','eq','on')
                     | map(attribute='name')
                     | list }}
                open_count: "{{ open_list | length }}"
                open_minutes: >-
                  {% set minutes = 0 %}
                  {% for e in expand(selected_doors) | selectattr('state','eq','on') %}
                    {% set age = (as_timestamp(now()) - as_timestamp(e.last_changed)) / 60 %}
                    {% if age > minutes %}
                      {% set minutes = age %}
                    {% endif %}
                  {% endfor %}
                  {{ minutes | round(0) | int }}

            - choose:
                - conditions:
                    - condition: template
                      value_template: "{{ d1 is not none }}"
                  sequence:
                    - device_id: !input notify_device_1
                      domain: mobile_app
                      type: notify
                      title: "{{ _title }}"
                      message: "{{ _message }}"
                      data: "{{ ios_push_block }}"
                - conditions:
                    - condition: template
                      value_template: "{{ d2 is not none }}"
                  sequence:
                    - device_id: !input notify_device_2
                      domain: mobile_app
                      type: notify
                      title: "{{ _title }}"
                      message: "{{ _message }}"
                      data: "{{ ios_push_block }}"
                - conditions:
                    - condition: template
                      value_template: "{{ d3 is not none }}"
                  sequence:
                    - device_id: !input notify_device_3
                      domain: mobile_app
                      type: notify
                      title: "{{ _title }}"
                      message: "{{ _message }}"
                      data: "{{ ios_push_block }}"
